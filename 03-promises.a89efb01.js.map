{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,SAASC,cAAc,qBAAqBC,OAElEC,GADQJ,SAASC,SAASC,cAAc,oBAAoBC,OACnDH,SAASC,SAASC,cAAc,sBAAsBC,QAyBrE,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,EAAUQ,MAAAP,IAGpBG,EAAO,C,SAAEJ,EAAUQ,MAAAP,GAAQ,GAE5BA,EAAM,G,CAlCKN,SAASC,cAAc,uBAG/Ba,iBAAiB,SAASC,IAClCA,EAAEC,iBACFN,YAAW,KACT,IAAK,IAAIL,EAAW,EAAGA,GAAYF,EAAQE,IAEzC,OADAY,QAAQC,IAAIb,GACLD,G,GAERN,EAAW,IA6BhBM,IACGe,MAAK,EAACd,SAAEA,EAAUQ,MAAAO,MACjBC,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBlB,QAAiBe,MAAU,IAEzEI,OAAM,EAACnB,SAAEA,EAAUQ,MAAAY,MAClBJ,EAAAzB,GAAS0B,OAAOI,QAAQ,sBAAoBrB,QAAeoB,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelay = parseInt(document.querySelector('input[name=delay]').value);\nconst delay = parseInt(document.querySelector('input[name=step]').value);\nconst amount = parseInt(document.querySelector('input[name=amount]').value);\n\nconst submitBtn = document.querySelector('button[type=submit]');\n\n// event watching submitBtn and calling function createPromise \"amount\" times\nsubmitBtn.addEventListener('click', e => {\n  e.preventDefault();\n  setTimeout(() => {\n    for (let position = 1; position <= amount; position++) {\n      console.log(position);\n      return createPromise();\n    }\n  }, firstDelay);\n});\n\n// // test event - comment Ln9-18\n// submitBtn.addEventListener('click', e => {\n//   e.preventDefault();\n//   for (let position = 1; position <= amount; position++) {\n//     console.log(position);\n//   }\n// });\n\n// function creating promise with random result, with a delay that user put in' delay'\n// no matter the result promise gives object {position, delay}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        //Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// what happens when promise is fulfilled and what when rejected\ncreatePromise()\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$firstDelay","parseInt","document","querySelector","value","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","e","preventDefault","console","log","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","warning"],"version":3,"file":"03-promises.a89efb01.js.map"}