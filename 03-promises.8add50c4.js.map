{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEmBC,SAASC,kBAAkB,SAC5BD,SAASC,kBAAkB,QACzBD,SAASC,kBAAkB,UAK/C,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAES,IAAIC,QAFTH,EAEiB,SAAAI,GACjBC,YAAW,W,OAAMD,EAAQN,E,GAAWC,GACpCO,QAAQC,IAAI,oB,EAIK,SAAAC,GACjBH,YAAW,W,OAAMG,EAAOV,E,GAAWC,GACnCO,QAAQC,IAAI,wB,GAhBAZ,SAASc,cAAc,uBAE/BC,iBAAiB,QAASb,GAoBpCA,EAAc,EAAG,MACdc,MAAK,SAAAC,G,IAAGd,EAAQc,EAARd,SAAUC,EAAKa,EAALb,MACjBc,EAAApB,GAASqB,OAAOC,QAAQ,uBAAwCC,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,M,IAEvEkB,OAAM,SAAAL,G,IAAGd,EAAQc,EAARd,SAAUC,EAAKa,EAALb,MAClBc,EAAApB,GAASqB,OAAOI,QAAQ,sBAAqCF,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.getElementsByName('delay');\nconst stepInput = document.getElementsByName('step');\nconst amountInput = document.getElementsByName('amount');\nconst submitBtn = document.querySelector('button[type=submit]');\n\nsubmitBtn.addEventListener('click', createPromise);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    //Fulfill\n    return new Promise(resolve => {\n      setTimeout(() => resolve(position), delay);\n      console.log('promise succedes!');\n    });\n  } else {\n    // Reject\n    return new Promise(reject => {\n      setTimeout(() => reject(position), delay);\n      console.log('promise was rejected!');\n    });\n  }\n}\n\n//starting code\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n//TEST\n/*\nconst isSuccess = true;\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (isSuccess) {\n      resolve('Succes!! Value passed to resolve function');\n      console.log('Promise has succeded;)');\n    } else {\n      reject('Error! passed to reject the function');\n      console.log('Promise has been rejected;)');\n    }\n  }, 2000);\n});\n\npromise.then(\n  value => {\n    console.log('onResolve call inside promise.then');\n    console.log('value');\n  },\n  error => {\n    console.log('onReject call inside promise.then()');\n    console.log(error);\n  }\n);\n*/\n"],"names":["$iU1Pc","parcelRequire","document","getElementsByName","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","setTimeout","console","log","reject","querySelector","addEventListener","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.8add50c4.js.map"}