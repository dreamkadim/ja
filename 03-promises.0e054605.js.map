{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAcC,SAASC,cAAc,SACrCC,EAAYH,EAAYE,cAAc,uBACtCE,EAAaJ,EAAYK,MAC/BC,QAAQC,IAAI,kBAAqBH,GAC9B,IAAGI,EAAYR,EAAYS,KACxBC,EAASV,EAAYW,OAE3B,SAASC,EAAcC,EAAUR,GAC/B,OAAO,IAAIS,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTX,QAAQC,IAAIM,GACUK,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUR,UAEpBW,EAAO,CAAEH,WAAUR,S,GAEpBA,E,IAGPF,EAAUiB,iBAAiB,SAAS,SAAAC,GAClCA,EAAEC,iBACFhB,QAAQC,IAAIH,EAAWmB,OACvBjB,QAAQC,IAAIiB,SAASpB,EAAWmB,QAEhC,IAAIE,EAAQD,SAASpB,EAAWmB,OAChC,IAAKG,EAAI,EAAGA,GAAKC,OAAOjB,EAAOa,OAAQG,IACrCd,EAAcc,EAAGD,GACdG,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUR,EAAKwB,EAALxB,MACjByB,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUR,EAAKwB,EAALxB,MAClByB,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAAN5B,EAAM,M,IAGjDoB,GAAgBD,SAAShB,EAAUe,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formElement = document.querySelector('.form');\nconst submitBtn = formElement.querySelector('button[type=submit]');\nconst firstDelay = formElement.delay;\nconsole.log('üöÄ ~ firstDelay', firstDelay);\nconst delayStep = formElement.step;\nconst amount = formElement.amount;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log(position);\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nsubmitBtn.addEventListener('click', e => {\n  e.preventDefault();\n  console.log(firstDelay.value);\n  console.log(parseInt(firstDelay.value));\n  // console.log(Number(amount.value));\n  let delay = parseInt(firstDelay.value);\n  for (i = 1; i <= Number(amount.value); i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `‚úÖ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(\n          `‚ùå Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay = delay + parseInt(delayStep.value);\n  }\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formElement","document","querySelector","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$firstDelay","delay","console","log","$ce04d3a99e08e73b$var$delayStep","step","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","value","parseInt","delay1","i","Number","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.0e054605.js.map"}